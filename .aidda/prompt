write the code to implement passLinkHeads

For each reference in the list of unresolved references, use the
github.com/stevegt/fuzzy library to get a list of matches of the
lowercased unresolved reference against the lowercased list of target
headings.  Iterate over the list of matches, creating a new
insertionsOnly list of matches that have insertions only and no
deletions or substitutions. If the resulting insertionsOnly list has
only one entry, replace target.Name with reference.Name, rewrite the
anchor in the text to be the same as the reference.Name, and mark the
reference as resolved.  If the resulting list has more than one match,
print a warning message to stderr and continue.  If the resulting list
has no matches, print a warning message to stderr and continue.


Sysmsg: You are an expert Go programmer. Please make the requested changes to the given code or documentation.
In: 
    /home/stevegt/lab/fuzzy/README.md
    README.md
    main.go
Out: 
    README.md
    main.go

.stop

import (
    "fmt"
    "github.com/stevegt/fuzzy"
)

func main() {
    target := "example"
    candidates := []string{"samples", "examples", "simple", "examine"}
    
    matches := fuzzy.Match(target, candidates)
    
    for _, match := range matches {
        fmt.Printf("String: %s, Score: %f, Insertions: %d, Deletions: %d, Substitutions: %d, Position: %d\n",
            match.Original, match.Score, match.Insertions, match.Deletions, match.Substitutions, match.Position)
    }
}

